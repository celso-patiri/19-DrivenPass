// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  Credentials Credential[]
  Notes       Note[]
  Cards       Card[]

  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  Wifi       Wifi[]
  Documents  Document[]

  @@map("users")
}

model Credential {
  id       Int    @id @default(autoincrement())
  title    String
  url      String
  username String
  password String

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([user_id, title])
  @@map("credentials")
}

model Note {
  id      Int    @id @default(autoincrement())
  title   String
  content String

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([user_id, title])
  @@map("notes")
}

model Card {
  id             Int      @id @default(autoincrement())
  title          String
  number         String
  cardholderName String
  securityCode   String
  expirationDate String
  password       String
  isVirtual      Boolean  @default(false)
  type           CardType

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([user_id, title])
  @@map("cards")
}

model Wifi {
  id       Int    @id @default(autoincrement())
  title    String
  network  String
  password String

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([user_id, title])
  @@map("wifis")
}

model Document {
  id     Int     @id @default(autoincrement())
  number String  @unique
  type   DocType

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([user_id, type])
  @@map("docs")
}

enum CardType {
  CREDIT
  DEBIT
  BOTH
}

enum DocType {
  RG
  CNH
}
